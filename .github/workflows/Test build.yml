name: Test Build

on:
 workflow_dispatch:
  push:
    tags:
      - v2.**

jobs:
  build:
    name: build ${{ matrix.arch }}-${{ matrix.release }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        release:
          - 23.05.2
        arch:
          - aarch64_cortex-a53
          - x86_64

    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Build
        uses: openwrt/gh-action-sdk@main
        env:
          ARCH: ${{ matrix.arch }}-${{ matrix.release }}
          PACKAGES: luci-app-passwall
          NO_REFRESH_CHECK: true

      - name: Store packages
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.arch }}-${{ matrix.release }}
          path: bin/packages/${{ matrix.arch }}/packages/*.ipk

      - name: Zip packages
        run: |
          zip -j ${{ matrix.arch }}-${{ matrix.release }}.zip bin/packages/${{ matrix.arch }}/packages/*.ipk
          echo -e "**文件说明** 🎈:\n" >> release.txt
          echo -e "1. 默认ssr与passwall的插件与依赖整合包\n" >> release.txt
          echo -e "2. 使用方法：将整合包上传到openwrt设备的tmp目录，输入命令 \`opkg install *.ipk\`\n" >> release.txt
          echo -e "3. 默认压缩包里包含ssr passwall bypass passwall2 插件\n" >> release.txt
          echo -e "4. 如果单独安装ssr与依赖，\`rm -rf {*passwall*,*bypass*,*vssr*}\`\n" >> release.txt
          
      - name: Upload packages
        uses: ncipollo/release-action@main
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          artifacts: "${{ matrix.arch }}-${{ matrix.release }}.zip,bin/packages/${{ matrix.arch }}/packages/*.ipk"
          allowUpdates: true
          replacesArtifacts: true
          bodyFile: "release.txt"
          tag: v2.${{ github.run_number }}-${{ matrix.arch }}-${{ matrix.release }}

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 0
    
      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@master
        with:
          keep_latest: 4
          delete_tags: true
        env:
           GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
